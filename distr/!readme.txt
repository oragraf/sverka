Внимание! Важно! 
Запуск из других GUI утилит, например, Toad/PLSQL Developer, скорее всего, приведет к ошибкам!

----------------------------------------------------------------------------------------------------------------------------------------------------------
0. Термин "распучивание" в контексте данного документа означает "увеличение объема". Исторически сложившийся термин.
1. Предварительно нужно указать в файле _define.sql параметры подключения
 1.1 В строке 
          define user_owner = 
     после равно нужно указать имя пользователя, которым подключаться к БД
 1.2 В строке 
          define user_pwd = 
     после равно нужно указать пароль пользователя, которым подключаться к БД. Пароль регистрозависим

 1.3 В строке 
          define ts ="SBRFTBS"
     после равно в кавычках нужно указать название табличного пространства, на которое имеет привилегию пользователь сверки и в котором располагаются его таблицы.

 1.4 В строке 
          define source_ratio=3
     после равно нужно указать коэффициент размножения данных по тербанку источнику. Итоговый коэффициент будет произведением (source_ratio * ratio). Значение от 2 до ...
     Нужно понимать, что дискове пространство не резиновое, поэтому если в процессе распучивания произойдет ошибка из-за нехватки места, то базу придется восстанавливать из бекапа.

 1.5 В строке 
          define ratio = 3
     после равно нужно указать коэффициент размножения. Целое неотрицательное число. От 2 до числа тербанков минус единица. Этот коэффициент влияет на следующее:
	 размер копируемых данных ТБ 99 принимается за единицу. Если 2 - то ТБ99 копируется в другой ТБ из имеющихся. Т.е. занимаемое пространство удваивается. 
	 Если 3, то ТБ99 копируется в два ТБ из имеющихся в справочнике, т.е. пространство утраивается. И т.д. Вывод - нельзя увеличивать размер более количества 
	 имеющихся в справочнике ТБ.

 1.6 В строке 
          define def_bank = 99
     после равно нужно указать код тербанка-источника данных для распучивания. Коды тербанков можно можно посмотреть в поле DIC_BANK.BANK_CODE. Тербанк с кодом 92
         отключен, для него нет партиции.
                                                               


2. Пока не выполнился скрипт текущего шага запускать следующий скрипт нельзя. Пока скрипт работает файл его журнала пуст и имеет размер 0.
   Как только скрипт отработал, в файле журнала появляются сведения о его работе.
----------------------------------------------------------------------------------------------------------------------------------------------------------
Данные скрипты предназначены для копирования данных тербанка с кодом 99 в другие тербанки с заданными кодами для целей нагрузочного тестирования. 
Объем полученных равен объему исходных данных. Копирование осуществляется с заменой идентификаторов, осуществляющих ссылочную целостность в БД.
Часть скриптов выполняется один раз для всех тербанков, часть выполняется циклически для каждого тербанка. Каждый скрипт создает файл журнала со своим
именем и расширением .log 

Примерная последовательность запуска:
Старт
  step_0 
  -- Дожидаемся окончания работы (закрытия окна терминала)
  step_1
  -- Дожидаемся окончания работы (закрытия окна терминала)
  step_2
Конец

Комплект поставки:
----------------------------------------------------------------------------------------------------------------------------------------------------------
_define.sql                          - Скрипт настроечных параметров. 
                                       Из него берутся параметры работы и подключения к соответствующей БД. 
                                       Описание параметров см.выше.


!run_step_0.cmd                      - Скрипт запуска шага 0.
!run_step_1.cmd                      - Скрипт запуска шага 1. 
!run_step_2.cmd                      - Скрипт запуска шага 2.



step_0-prepare.sql                   - скрипт выполняет подготовительные работы. Отключает констрейнты, индексы переводит в состояние disable.
                                       Выполняет распучивание одного тербанка-источника с коэффициентом 
                                       Запускается один раз путем вызова командного файла !run_step_0.cmd


step_1-enlarge.sql                   - скрипт выполняет распучивание данных по всем задействованным тербанкам. 
                                       Запускается один раз путем вызова командного файла !run_step_1.cmd


step_2-final.sql                     - скрипт выполняет заключительные работы. Перестройку индексов, включение констрентов.
                                       Запускается один раз путем вызова командного файла !run_step_2.cmd

utl_foot.sql                         - утилитный скрипт. Не предназначен для самостоятельного запуска
utl_head.sql                         - утилитный скрипт. Не предназначен для самостоятельного запуска
it$$check.sql                        - утилитный скрипт. Не предназначен для самостоятельного запуска
IT$$UTL.sql                          - утилитный скрипт. Не предназначен для самостоятельного запуска
set.cmd                              - утилитный скрипт. Не предназначен для самостоятельного запуска


!readme.txt                          - этот файл
----------------------------------------------------------------------------------------------------------------------------------------------------------