Внимание! Важно!
----------------------------------------------------------------------------------------------------------------------------------------------------------
0. Термин "распучивание" в контексте данного документа означает "увеличение объема". Исторически сложившийся термин.
1. Предварительно нужно указать в файле _define.sql параметры подключения
 1.1 В строке 
          define user_owner = 
     после равно нужно указать имя пользователя, которым подключаться к БД
 1.2 В строке 
          define user_pwd = 
     после равно нужно указать пароль пользователя, которым подключаться к БД. Пароль регистрозависим

 1.3 В строке 
          define ts ="SBRFTBS"
     после равно в кавычках нужно указать название табличного пространства, на которое имеет привилегию пользователь сверки и в котором располагаются его таблицы.

 1.4 В строке 
          define ratio = 3
     после равно нужно указать коэффициент размножения. Целое неотрицательное число. От 2 до числа тербанков минус единица. Этот коэффициент влияет на следующее:
	 размер копируемых данных ТБ 99 принимается за единицу. Если 2 - то ТБ99 копируется в другой ТБ из имеющихся. Т.е. занимаемое пространство удваивается. 
	 Если 3, то ТБ99 копируется в два ТБ из имеющихся в справочнике, т.е. пространство утраивается. И т.д. Вывод - нельзя увеличивать размер более количества 
	 имеющихся в справочнике ТБ.
      
1. Все скрипты выполнять только из утилиты SQL*PLUS, подключаясь пользователем-владельцем объектов АС Сверка. Например, для выполнения шага 2 для тербанка 70:
   sqlplus sv41_psi/sv41_psi@piero1_info3 @step_2-generate-run.sql 70


   Запуск из других GUI утилит, например, Toad/PLSQL Developer, скорее всего, приведет к ошибкам!
2. Пока не выполнился скрипт текущего шага запускать следующий скрипт нельзя. Пока скрипт работает файл его журнала пуст и имеет размер 0.
   Как только скрипт отработал, в файле журнала появляются сведения о его работе.
----------------------------------------------------------------------------------------------------------------------------------------------------------
Данные скрипты предназначены для копирования данных тербанка с кодом 99 в другие тербанки с заданными кодами для целей нагрузочного тестирования. 
Объем полученных равен объему исходных данных. Копирование осуществляется с заменой идентификаторов, осуществляющих ссылочную целостность в БД.
Часть скриптов выполняется один раз для всех тербанков, часть выполняется циклически для каждого тербанка. Каждый скрипт создает файл журнала со своим
именем и расширением .log 

Примерная последовательность запуска:
Старт
  step_0 
  -- Дожидаемся окончания работы (закрытия окна терминала)
  step_1
  -- Дожидаемся окончания работы (закрытия окна терминала)
  step_2
Конец

Порядок копирования ТБ произвольный
     
Комплект поставки:
----------------------------------------------------------------------------------------------------------------------------------------------------------
step_0-prepare.sql                   - скрипт выполняет подготовительные работы. Запускается один раз, в самом начале перед "распучиванием" всех тербанков.
                                       Параметры:
                                       &1 - название существующего табличного пространства объемом не менее 1Тб для создания временных таблиц

step_1-merge-subpartitions.sql       - скрипт выполняет объединение секций по одному тербанку
                                       Параметры:
                                       &1 - цифровой (2 цифры) код нового генерируемого тербанка.

step_2-generate-run.sql              - скрипт выполняет генерацию данных по одному тербанку
                                       Параметры:
                                       &1 - цифровой (2 цифры) код нового генерируемого тербанка.

step_4_exchange-subpartitions.sql    - скрипт выполняет обмен секций по одному тербанку
                                       Параметры:
                                       &1 - цифровой (2 цифры) код нового генерируемого тербанка.

step_5-rebuild-indexes.sql           - скрипт выполняет заключительные работы. Запускается один раз, в конце, после "распучивания" всех тербанков
                                       Параметры отсутствуют

step_6-validate-constraints.sql      - скрипт выполняет заключительные работы. Запускается один раз, в конце, после "распучивания" всех тербанков
                                       Параметры отсутствуют

step_7-final.sql                     - скрипт выполняет заключительные работы. Запускается один раз, в конце, после "распучивания" всех тербанков
                                       Параметры отсутствуют

utl_foot.sql                         - утилитный скрипт. Не предназначен для самостоятельного запуска
utl_head.sql                         - утилитный скрипт. Не предназначен для самостоятельного запуска

!readme.txt                          - этот файл
----------------------------------------------------------------------------------------------------------------------------------------------------------